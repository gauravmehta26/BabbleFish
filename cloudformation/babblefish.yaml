AWSTemplateFormatVersion: "2010-09-09"

Parameters:

  BucketName:
    Type: String
#    Default: babbelfish-app-bucket1
    Description: The name of the bucket where zip file is placed

Resources:
#  'Fn::Transform':
#    Name: 'AWS::Include'
#    Parameters:
#      Location: s3://babbelfish-app-bucket/BabbleFish/cloudformation/CopySource.yaml

#  VoiceTranslatorBucket:
#    Type: AWS::S3::Bucket
#    Properties:
#      AccessControl: PublicRead
#        WebsiteConfiguration:
#        IndexDocument: voice-translator.html
#      CorsConfiguration:
#        CorsRules:
#          - AllowedHeaders: ['*']
#            AllowedMethods: [GET,PUT,POST,HEAD]
#            AllowedOrigins: ['*']
#            Id: myCORSRuleId1
#            MaxAge: '3600'

#  VoiceTranslatorBucketPolicy:
#    Type: AWS::S3::BucketPolicy
#    Properties:
#      Bucket: !Ref BucketName
#      PolicyDocument:
#        Statement:
#          - Action: ['s3:GetObject']
#            Effect: Allow
#            Principal: "*"
#            Resource:
#              - !Join ['', ['arn:aws:s3:::', !Ref BucketName, '/*']]

  VoiceTranslatorLambda:
#    DependsOn: CopyZips #defined in included stack
    Type: "AWS::Lambda::Function"
    Properties:
      Description: "Handle input audio and transcribe, translate and convert back to audio"
      Handler: "app.babelfish.LambdaHandler::handleRequest"
      Role: !GetAtt VoiceTranslatorLambdaRole.Arn
      Code:
        S3Bucket:
          Ref:  BucketName #defined in included stack
        S3Key: 'babel-fish-app-1.0-SNAPSHOT.jar'
      Runtime: "java8"
      MemorySize: 1024
      Timeout: 30

  CfDistribution:
    Metadata:
      Comment: 'CloudFront distribution over Voice Translator App - to enable HTTPS'
    Properties:
      DistributionConfig:
        Comment: 'CloudFront distribution over Voice Translator App - to enable HTTPS'
        DefaultCacheBehavior:
          AllowedMethods:
            - 'HEAD'
            - 'GET'
          CachedMethods:
            - 'HEAD'
            - 'GET'
          Compress: false
          DefaultTTL: 86400
          ForwardedValues:
            Cookies:
              Forward: 'none'
            Headers:
              - 'Origin'
            QueryString: false
#          DefaultTTL: 0
          TargetOriginId: !Sub 'S3-babbelfish-app-bucket1'
          ViewerProtocolPolicy: 'redirect-to-https'
        DefaultRootObject: 'index.html'
        Enabled: true
        HttpVersion: 'http1.1'
        IPV6Enabled: false
        Origins:
          - DomainName: 'babbelfish-app-bucket1.s3.amazonaws.com'
            Id: 'S3-babbelfish-app-bucket1'
            S3OriginConfig: {}
        PriceClass: 'PriceClass_All'
    Type: 'AWS::CloudFront::Distribution'

  VoiceTranslatorLambdaRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: "sts:AssumeRole"
      PermissionsBoundary: !Sub 'arn:aws:iam::${AWS::AccountId}:policy/aab-base-permission-boundary'
      Policies:
        - PolicyName: TranscribeAccess
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "transcribe:StartStreamTranscription"
                Resource: "*"
        - PolicyName: CloudWatchPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              -
                Effect: "Allow"
                Action:
                  - "logs:CreateLogGroup"
                  - "logs:CreateLogStream"
                  - "logs:PutLogEvents"
                Resource: "arn:aws:logs:*:*:*"
        - PolicyName: TranslateAccess
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "translate:TranslateText"
                Resource: "*"
        - PolicyName: TranslateAccess
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "translate:TranslateText"
                Resource: "*"
        - PolicyName: PollyAccess
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "polly:SynthesizeSpeech"
                Resource: "*"
        - PolicyName: S3Access
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "s3:GetObject"
                  - "s3:PutObject"
                  - "s3:PutObjectAcl"
                Resource:
                  Fn::Join:
                    - ""
                    -
                      - "arn:aws:s3:::"
                      -  Ref: "BucketName"
                      - "/*"
        - PolicyName: S3LocationAccess
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "s3:GetBucketLocation"
                Resource: "arn:aws:s3:::*"


  CognitoIdentityPool:
    Type: AWS::Cognito::IdentityPool
    Properties:
      AllowUnauthenticatedIdentities: True


  IdentityPoolRoleMapping:
    Type: "AWS::Cognito::IdentityPoolRoleAttachment"
    Properties:
      IdentityPoolId: !Ref CognitoIdentityPool
      Roles:
        unauthenticated: !GetAtt CognitoUnAuthorizedRole.Arn

  CognitoUnAuthorizedRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Federated: "cognito-identity.amazonaws.com"
            Action:
              - "sts:AssumeRoleWithWebIdentity"
      PermissionsBoundary: !Sub 'arn:aws:iam::${AWS::AccountId}:policy/aab-base-permission-boundary'
      Policies:
        - PolicyName: "CognitoUnauthorizedPolicy"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action:
                  - "lambda:InvokeFunction"
                Resource:
                  - !GetAtt VoiceTranslatorLambda.Arn
              - Effect: Allow
                Action:
                  - "s3:PutObject"
                Resource:
                  Fn::Join:
                    - ""
                    -
                      - "arn:aws:s3:::"
                      -  Ref: "BucketName"
                      - "/*"

Outputs:
  VoiceTranslatorLink:
    Description: 'Domain name for our cloudfront distribution'
    Value: !Join [ "", [ "https://", !GetAtt CfDistribution.DomainName, "/voice-translator.html" ] ]
  VoiceTranslatorBucket:
    Description: VoiceTranslator S3 Bucket
    Value: !Ref BucketName
  IdentityPoolIdOutput:
    Description: IdentityPoolId
    Value: !Ref CognitoIdentityPool
  VoiceTranslatorLambda:
    Description: VoiceTranslator Lambda
    Value: !Ref VoiceTranslatorLambda
